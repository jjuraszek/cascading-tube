task deploy(dependsOn: [':tube-core:uploadArchives',':tube-io:uploadArchives',':tube-testing:uploadArchives'])

subprojects {
  apply plugin: 'scala'
  apply plugin: 'maven'

  group = 'org.tube'
  version = '2.0.1'

  dependencies {
    compile(
        'org.scala-lang:scala-library:2.10.3'
    )
  }

  tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
    scalaCompileOptions.additionalParameters = ['-target:jvm-1.6', '-feature', '-language:implicitConversions']
    configure(scalaCompileOptions.forkOptions) {
      memoryMaximumSize = '1g'
      jvmArgs = ['-XX:MaxPermSize=256m']
    }
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives sourcesJar
    archives javadocJar
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url 'http://conjars.org/repo'
    }
    maven {
      url 'https://repository.cloudera.com/artifactory/cloudera-repos'
    }
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        repository(url: "http://conjars.org/repo") {
          authentication(userName: conjarUsr, password: conjarPswd)
        }
      }
    }
  }
}

allprojects {
  apply plugin: 'idea'

  idea {
    module {
      downloadSources = true
    }
  }
}